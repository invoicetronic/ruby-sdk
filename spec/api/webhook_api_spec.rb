=begin
#Invoicetronic API

#The [Invoicetronic API][2] is a RESTful service that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed to be simple and easy to use, abstracting away SDI complexity while providing complete control over the invoice send/receive process. It provides advanced features as encryption at rest, multi-language pre-flight invoice validation, multiple upload formats, webhooks, event logging, client SDKs, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/

The version of the OpenAPI document: 1
Contact: support@invoicetronic.com
Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Invoicetronic_Sdk::WebhookApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'WebhookApi' do
  before do
    # run before each test
    @api_instance = Invoicetronic_Sdk::WebhookApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WebhookApi' do
    it 'should create an instance of WebhookApi' do
      expect(@api_instance).to be_instance_of(Invoicetronic_Sdk::WebhookApi)
    end
  end

  # unit tests for webhook_get
  # List webhooks
  # Webhooks are used to notify external services about write events that occur in the API. You can subscribe to specific events and receive a notification when they occur.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number. Defaults to 1.
  # @option opts [Integer] :page_size Items per page. Defaults to 50. Cannot be greater than 200.
  # @option opts [String] :sort Sort by field. Prefix with &#39;-&#39; for descending order.
  # @return [Array<WebHook>]
  describe 'webhook_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for webhook_id_delete
  # Delete a webhook by id
  # Webhooks are used to notify external services about write events that occur in the API. You can subscribe to specific events and receive a notification when they occur.
  # @param id Item id
  # @param [Hash] opts the optional parameters
  # @return [WebHook]
  describe 'webhook_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for webhook_id_get
  # Get a webhook by id
  # Webhooks are used to notify external services about write events that occur in the API. You can subscribe to specific events and receive a notification when they occur.
  # @param id Item id
  # @param [Hash] opts the optional parameters
  # @return [WebHook]
  describe 'webhook_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for webhook_post
  # Add a webhook
  # Webhooks are used to notify external services about write events that occur in the API. You can subscribe to specific events and receive a notification when they occur.
  # @param web_hook 
  # @param [Hash] opts the optional parameters
  # @return [WebHook]
  describe 'webhook_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for webhook_put
  # Update a webhook
  # Webhooks are used to notify external services about write events that occur in the API. You can subscribe to specific events and receive a notification when they occur.
  # @param web_hook 
  # @param [Hash] opts the optional parameters
  # @return [WebHook]
  describe 'webhook_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for webhookhistory_get
  # List webhook history items
  # Webhook history items are stored in the database and can be accessed via the API. They are preserved for 15 in both the live and sandbox environments.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number. Defaults to 1.
  # @option opts [Integer] :page_size Items per page. Defaults to 50. Cannot be greater than 200.
  # @option opts [String] :sort Sort by field. Prefix with &#39;-&#39; for descending order.
  # @return [Array<WebHookHistory>]
  describe 'webhookhistory_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for webhookhistory_id_get
  # Get a webhook history item by id
  # Webhook history items are stored in the database and can be accessed via the API. They are preserved for 15 in both the live and sandbox environments.
  # @param id Item id
  # @param [Hash] opts the optional parameters
  # @return [WebHookHistory]
  describe 'webhookhistory_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
